{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": "-- Grafana --",
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "links": [],
  "liveNow": false,
  "panels": [
    {
      "datasource": "SQLite",
      "fieldConfig": {
        "defaults": {
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "inspect": false
          },
          "decimals": 8,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Hash"
            },
            "properties": [
              {
                "id": "links",
                "value": [
                  {
                    "targetBlank": true,
                    "title": "View on Etherscan",
                    "url": "https://etherscan.io/tx/${__value.raw}ï»¿"
                  }
                ]
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Block"
            },
            "properties": [
              {
                "id": "links",
                "value": [
                  {
                    "targetBlank": true,
                    "title": "View on Etherscan",
                    "url": "https://etherscan.io/block/${__value.raw}"
                  }
                ]
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "To"
            },
            "properties": [
              {
                "id": "links",
                "value": [
                  {
                    "targetBlank": true,
                    "title": "View on Etherscan",
                    "url": "https://etherscan.io/address/${__value.raw}"
                  }
                ]
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "From"
            },
            "properties": [
              {
                "id": "links",
                "value": [
                  {
                    "targetBlank": true,
                    "title": "View on Etherscan",
                    "url": "https://etherscan.io/address/${__value.raw}"
                  }
                ]
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "From Nickname"
            },
            "properties": [
              {
                "id": "links",
                "value": [
                  {
                    "targetBlank": true,
                    "title": "View on Etherscan",
                    "url": "https://etherscan.io/address/${__data.fields.from}"
                  }
                ]
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "To Nickname"
            },
            "properties": [
              {
                "id": "links",
                "value": [
                  {
                    "targetBlank": true,
                    "title": "View on Etherscan",
                    "url": "https://etherscan.io/address/${__data.fields.to}"
                  }
                ]
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Block"
            },
            "properties": [
              {
                "id": "decimals"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Log Index"
            },
            "properties": [
              {
                "id": "decimals"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 18,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 1,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": [
          {
            "desc": true,
            "displayName": "Timestamp"
          }
        ]
      },
      "pluginVersion": "10.2.0",
      "targets": [
        {
          "datasource": "SQLite",
          "queryText": "WITH RECURSIVE group_hierarchy AS (\n    SELECT txgroup_id, parent_txgroup, name FROM txgroups WHERE parent_txgroup IS NULL\n    UNION ALL\n    SELECT child.txgroup_id, child.parent_txgroup, parent.name FROM txgroups child JOIN group_hierarchy parent ON child.parent_txgroup = parent.txgroup_id\n)\n\nselect timestamp as \"Timestamp\", block as \"Block\", hash as \"Hash\", token as \"Token\", \"from\" as \"From\", from_nickname as \"From Nickname\", \"to\" as \"To\", to_nickname as \"To Nickname\", amount as \"Amount\", price as \"Price\", value_usd as \"Value USD\", txgroup as \"TxGroup\", a.parent_txgroup as \"Parent TxGroup\", log_index as \"Log Index\"\nfrom (\n  SELECT datetime(a.timestamp, 'unixepoch') AS timestamp, a.block, a.hash, c.symbol AS token, d.address AS \"from\", d.nickname as from_nickname, e.address AS \"to\", e.nickname as to_nickname, a.amount, a.price, a.value_usd, f.name AS txgroup, g.name AS parent_txgroup, f.txgroup_id, a.log_index\n  FROM treasury_txs a\n      LEFT JOIN chains b ON a.chain = b.chain_dbid\n      LEFT JOIN tokens c ON a.token_id = c.token_id\n      LEFT JOIN addresses d ON a.\"from\" = d.address_id\n      LEFT JOIN addresses e ON a.\"to\" = e.address_id\n      LEFT JOIN txgroups f ON a.txgroup_id = f.txgroup_id\n      LEFT JOIN txgroups g ON f.parent_txgroup = g.txgroup_id\n  WHERE a.timestamp >= $__from / 1000 \n    and a.timestamp < $__to / 1000 \n    and ('$Chain' like '{%' or b.chain_name = '$Chain') \n    and ('$Token' like '{%' or c.symbol = '$Token') \n    and ('$From' like '{%' or d.address = '$From') \n    and ('$To' like '{%' or e.address = '$To')\n    and ('$FromNickname' like '{%' or d.nickname = '$FromNickname') \n    and ('$ToNickname' like '{%' or e.nickname = '$ToNickname')\n) a\nleft join group_hierarchy b on a.txgroup_id = b.txgroup_id\nWHERE ('$Top' LIKE '{%' OR b.name = '$Top')\nORDER BY timestamp",
          "queryType": "table",
          "rawQueryText": "WITH RECURSIVE group_hierarchy AS (\n    SELECT txgroup_id, parent_txgroup, name FROM txgroups WHERE parent_txgroup IS NULL\n    UNION ALL\n    SELECT child.txgroup_id, child.parent_txgroup, parent.name FROM txgroups child JOIN group_hierarchy parent ON child.parent_txgroup = parent.txgroup_id\n)\n\nselect timestamp as \"Timestamp\", block as \"Block\", hash as \"Hash\", token as \"Token\", \"from\" as \"From\", from_nickname as \"From Nickname\", \"to\" as \"To\", to_nickname as \"To Nickname\", amount as \"Amount\", price as \"Price\", value_usd as \"Value USD\", txgroup as \"TxGroup\", a.parent_txgroup as \"Parent TxGroup\", log_index as \"Log Index\"\nfrom (\n  SELECT datetime(a.timestamp, 'unixepoch') AS timestamp, a.block, a.hash, c.symbol AS token, d.address AS \"from\", d.nickname as from_nickname, e.address AS \"to\", e.nickname as to_nickname, a.amount, a.price, a.value_usd, f.name AS txgroup, g.name AS parent_txgroup, f.txgroup_id, a.log_index\n  FROM treasury_txs a\n      LEFT JOIN chains b ON a.chain = b.chain_dbid\n      LEFT JOIN tokens c ON a.token_id = c.token_id\n      LEFT JOIN addresses d ON a.\"from\" = d.address_id\n      LEFT JOIN addresses e ON a.\"to\" = e.address_id\n      LEFT JOIN txgroups f ON a.txgroup_id = f.txgroup_id\n      LEFT JOIN txgroups g ON f.parent_txgroup = g.txgroup_id\n  WHERE a.timestamp >= $__from / 1000 \n    and a.timestamp < $__to / 1000 \n    and ('$Chain' like '{%' or b.chain_name = '$Chain') \n    and ('$Token' like '{%' or c.symbol = '$Token') \n    and ('$From' like '{%' or d.address = '$From') \n    and ('$To' like '{%' or e.address = '$To')\n    and ('$FromNickname' like '{%' or d.nickname = '$FromNickname') \n    and ('$ToNickname' like '{%' or e.nickname = '$ToNickname')\n) a\nleft join group_hierarchy b on a.txgroup_id = b.txgroup_id\nWHERE ('$Top' LIKE '{%' OR b.name = '$Top')\nORDER BY timestamp",
          "refId": "A",
          "timeColumns": [
            "time",
            "ts"
          ]
        }
      ],
      "title": "Transactions",
      "type": "table"
    }
  ],
  "refresh": "",
  "schemaVersion": 38,
  "tags": [],
  "templating": {
    "list": [
      {
        "current": {
          "selected": false,
          "text": "All",
          "value": "$__all"
        },
        "datasource": "SQLite",
        "definition": "WITH RECURSIVE group_hierarchy AS (\n    SELECT txgroup_id, parent_txgroup, name FROM txgroups WHERE parent_txgroup IS NULL\n    UNION ALL\n    SELECT child.txgroup_id, child.parent_txgroup, parent.name FROM txgroups child JOIN group_hierarchy parent ON child.parent_txgroup = parent.txgroup_id\n)\n\nSELECT DISTINCT gh.name FROM treasury_txs a INNER JOIN group_hierarchy gh ON a.txgroup_id = gh.txgroup_id;",
        "hide": 0,
        "includeAll": true,
        "label": "Top Level",
        "multi": false,
        "name": "Top",
        "options": [],
        "query": "WITH RECURSIVE group_hierarchy AS (\n    SELECT txgroup_id, parent_txgroup, name FROM txgroups WHERE parent_txgroup IS NULL\n    UNION ALL\n    SELECT child.txgroup_id, child.parent_txgroup, parent.name FROM txgroups child JOIN group_hierarchy parent ON child.parent_txgroup = parent.txgroup_id\n)\n\nSELECT DISTINCT gh.name FROM treasury_txs a INNER JOIN group_hierarchy gh ON a.txgroup_id = gh.txgroup_id;",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 1,
        "type": "query"
      },
      {
        "current": {
          "selected": false,
          "text": "All",
          "value": "$__all"
        },
        "datasource": "SQLite",
        "definition": "select distinct chain_name from treasury_txs a left join chains b on a.chain = b.chain_dbid",
        "description": "",
        "hide": 0,
        "includeAll": true,
        "multi": false,
        "name": "Chain",
        "options": [],
        "query": "select distinct chain_name from treasury_txs a left join chains b on a.chain = b.chain_dbid",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": {
          "selected": false,
          "text": "All",
          "value": "$__all"
        },
        "datasource": "SQLite",
        "definition": "select distinct symbol from treasury_txs a left join tokens b on a.token_id = b.token_id",
        "hide": 0,
        "includeAll": true,
        "multi": false,
        "name": "Token",
        "options": [],
        "query": "select distinct symbol from treasury_txs a left join tokens b on a.token_id = b.token_id",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 1,
        "type": "query"
      },
      {
        "current": {
          "selected": false,
          "text": "All",
          "value": "$__all"
        },
        "datasource": "SQLite",
        "definition": "select distinct address from treasury_txs a left join addresses b on a.\"from\" = b.address_id",
        "hide": 0,
        "includeAll": true,
        "label": "From Address",
        "multi": false,
        "name": "From",
        "options": [],
        "query": "select distinct address from treasury_txs a left join addresses b on a.\"from\" = b.address_id",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 1,
        "type": "query"
      },
      {
        "current": {
          "selected": false,
          "text": "All",
          "value": "$__all"
        },
        "datasource": "SQLite",
        "definition": "select distinct nickname from treasury_txs a inner join addresses b on a.\"from\" = b.address_id",
        "hide": 0,
        "includeAll": true,
        "label": "From Nickname",
        "multi": false,
        "name": "FromNickname",
        "options": [],
        "query": "select distinct nickname from treasury_txs a inner join addresses b on a.\"from\" = b.address_id",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 1,
        "type": "query"
      },
      {
        "current": {
          "selected": false,
          "text": "All",
          "value": "$__all"
        },
        "datasource": "SQLite",
        "definition": "select distinct address from treasury_txs a left join addresses b on a.\"to\" = b.address_id",
        "hide": 0,
        "includeAll": true,
        "label": "To Address",
        "multi": false,
        "name": "To",
        "options": [],
        "query": "select distinct address from treasury_txs a left join addresses b on a.\"to\" = b.address_id",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 1,
        "type": "query"
      },
      {
        "current": {
          "selected": false,
          "text": "All",
          "value": "$__all"
        },
        "datasource": "SQLite",
        "definition": "select distinct nickname from treasury_txs a inner join addresses b on a.\"to\" = b.address_id",
        "hide": 0,
        "includeAll": true,
        "label": "To Nickname",
        "multi": false,
        "name": "ToNickname",
        "options": [],
        "query": "select distinct nickname from treasury_txs a inner join addresses b on a.\"to\" = b.address_id",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 1,
        "type": "query"
      }
    ]
  },
  "time": {
    "from": "now-7d",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "",
  "title": "Treasury Transactions",
  "uid": "b21f1092-66a4-4fb0-90ef-ed77d2becaa4",
  "version": 1,
  "weekStart": ""
}
